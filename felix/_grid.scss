@use 'sass:math';

$grid-columns: 12;
$grid-gaps : (
    '0' : 0,
    '1' : 0.3rem,
    '2' : 0.6rem,
    '3' : 0.9rem,
    '4' : 1.2rem,
    '5' : 1.5rem,
    '6' : 1.8rem
);

$layout-classes: flex-start, flex-end, center, space-between, space-around;

// base layout classes
 .container{
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
}

.row {
    display: flex;
    flex-flow: row wrap; 
}

// grid-gaps
@each $key, $val in $grid-gaps{
    .gap-#{$key} > * {
        padding : $val;
    }
    .gap-#{$key}{
        margin-left: -$val;
        margin-right: -$val;
    }
};

// layout-classes
@each $val in $layout-classes{
    .justify-#{$val}{
        justify-content: $val;
    }
};

@include xs{
    @for $i from 1 through $grid-columns{
        .col-xs-#{$i}{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include sm{
    @for $i from 1 through $grid-columns{
        .col-sm-#{$i}{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include md{
    @for $i from 1 through $grid-columns{
        .col-md-#{$i}{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include lg{
    @for $i from 1 through $grid-columns{
        .col-lg-#{$i}{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include xl{
    @for $i from 1 through $grid-columns{
        .col-xl-#{$i}{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}